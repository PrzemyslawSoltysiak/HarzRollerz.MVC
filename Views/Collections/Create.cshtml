@model HarzRollerz.MVC.ViewModels.Collections.CreateCollectionViewModel

@{
    ViewData["Title"] = "Create";
}


<div class="container mx-auto">
    <div class="row px-3 mt-4">
        <h3 class="col m-3">Register Collection for @Model.CompetitionString </h3>
        <a asp-controller="Competitions" asp-action="Index" class="col-auto mx-4 mt-4">Back to Competitions</a>
    </div>
    <hr class="" />
    <div class="row col-md-11 mx-auto my-4">
        <form asp-action="Create" method="POST">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="CompetitionID" hidden />
            <input asp-for="CompetitionString" hidden />
            <div class="form-group">
                <label asp-for="OwnerID" class="form-label px-2">Owner</label>
                <select asp-for="OwnerID" class="form-control" asp-items="Model.AvailableOwners" onchange="onOwnerChange(this)">
                    <option value="">- Select Owner -</option>
                </select>
            </div>
            <div class="form-group container row my-4">
                <h3 class="col my-4">Canaries in Collection</h3>
                <button onclick="resetCollection(event)" class="btn btn-danger col-auto my-auto px-2">Reset</button>
                <input type="submit" value="Create" class="btn btn-primary col-auto my-auto ms-3 px-3 py-2" @(Model.OwnerID != null ? "" : "disabled") />
                <div class="row">
                    @for (int cage = 1; cage <= Model.Cages.Length; ++cage)
                    {
                        <div class="col-3 text-center">
                            <label class="form-label">@Model.Cages[cage - 1].CageNumber</label>
                            <input asp-for="Cages[cage - 1].CanaryRingNumber" ondrop="drop(event)" ondragover="allowDrop(event)" class="form-control text-center" />
                            <input asp-for="Cages[cage - 1].CageNumber" hidden />
                        </div>
                    }
                </div>
            </div>
            <div class="container row pb-2">
                <h4 class="col px-3 mt-4">Breeder's Canaries</h4>
                <div class="container row">
                    @if ((Model.OwnerID != null) && !Model.AvailableCanaries.Any())
                    {
                        <h5 class="text-center pt-4">
                            - No registered Canaries -
                        </h5>
                        <a asp-controller="Canaries" asp-action="Create" asp-route-ownerID="@Model.OwnerID" class="text-center pt-2">Register Canary</a>
                    }
                    else
                    {
                        @for (int i = 0; i < Model.AvailableCanaries.Length; ++i)
                        {
                            @if (Model.AvailableCanaries[i] != null)
                            {
                                <div draggable="true" ondragstart="drag(event)" id="@Model.AvailableCanaries[i].RingNumber" class="col m-3 p-4 text-center" style="min-width: 24ch; height: 12ch; background-color: rgb(245, 245, 250);">
                                    <h6>@Model.AvailableCanaries[i].RingNumber</h6>
                                    @if (!String.IsNullOrEmpty(Model.AvailableCanaries[i].Name))
                                    {
                                        <h6>Name: @Model.AvailableCanaries[i].Name</h6>
                                    }
                                    <input asp-for="AvailableCanaries[i].RingNumber" hidden />
                                    <input asp-for="AvailableCanaries[i].Name" hidden />
                                </div>
                            }
                        }
                    }
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    function onOwnerChange(element) {
        window.location.replace("@(Url.Action("Create"))?competitionID=@Model.CompetitionID&ownerID=" + element.value);
    }

    function drag(event) {
        event.dataTransfer.setData("text", event.target.id);
    }

    function allowDrop(event) {
        event.preventDefault();
    }

    function drop(event) {
        event.preventDefault();
        var data = event.dataTransfer.getData("text");
        event.target.value = data;
        document.getElementById(data).remove();
    }

    function resetCollection(event) {
        event.preventDefault();
        window.location.replace("@(Url.Action("Create"))?competitionID=@Model.CompetitionID&ownerID=@Model.OwnerID");
    }
</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
